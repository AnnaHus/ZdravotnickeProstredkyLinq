#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Tento kód byl generován nástrojem.
//     Verze modulu runtime:4.0.30319.42000
//
//     Změny tohoto souboru mohou způsobit nesprávné chování a budou ztraceny,
//     dojde-li k novému generování kódu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZdravotnickeProstredkyLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ZdravotnickeProstredky")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOdpovednaOsoba(OdpovednaOsoba instance);
    partial void UpdateOdpovednaOsoba(OdpovednaOsoba instance);
    partial void DeleteOdpovednaOsoba(OdpovednaOsoba instance);
    partial void InsertZdravotnickeProstredky(ZdravotnickeProstredky instance);
    partial void UpdateZdravotnickeProstredky(ZdravotnickeProstredky instance);
    partial void DeleteZdravotnickeProstredky(ZdravotnickeProstredky instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ZdravotnickeProstredkyLinq.Properties.Settings.Default.ZdravotnickeProstredkyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OdpovednaOsoba> OdpovednaOsoba
		{
			get
			{
				return this.GetTable<OdpovednaOsoba>();
			}
		}
		
		public System.Data.Linq.Table<ZdravotnickeProstredky> ZdravotnickeProstredky
		{
			get
			{
				return this.GetTable<ZdravotnickeProstredky>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OdpovednaOsoba")]
	public partial class OdpovednaOsoba : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Jmeno;
		
		private System.Nullable<int> _RokNarozeni;
		
		private EntitySet<ZdravotnickeProstredky> _ZdravotnickeProstredky;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJmenoChanging(string value);
    partial void OnJmenoChanged();
    partial void OnRokNarozeniChanging(System.Nullable<int> value);
    partial void OnRokNarozeniChanged();
    #endregion
		
		public OdpovednaOsoba()
		{
			this._ZdravotnickeProstredky = new EntitySet<ZdravotnickeProstredky>(new Action<ZdravotnickeProstredky>(this.attach_ZdravotnickeProstredky), new Action<ZdravotnickeProstredky>(this.detach_ZdravotnickeProstredky));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jmeno", DbType="VarChar(50)")]
		public string Jmeno
		{
			get
			{
				return this._Jmeno;
			}
			set
			{
				if ((this._Jmeno != value))
				{
					this.OnJmenoChanging(value);
					this.SendPropertyChanging();
					this._Jmeno = value;
					this.SendPropertyChanged("Jmeno");
					this.OnJmenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RokNarozeni", DbType="Int")]
		public System.Nullable<int> RokNarozeni
		{
			get
			{
				return this._RokNarozeni;
			}
			set
			{
				if ((this._RokNarozeni != value))
				{
					this.OnRokNarozeniChanging(value);
					this.SendPropertyChanging();
					this._RokNarozeni = value;
					this.SendPropertyChanged("RokNarozeni");
					this.OnRokNarozeniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OdpovednaOsoba_ZdravotnickeProstredky", Storage="_ZdravotnickeProstredky", ThisKey="Id", OtherKey="OdpovednaOsobaId")]
		public EntitySet<ZdravotnickeProstredky> ZdravotnickeProstredky
		{
			get
			{
				return this._ZdravotnickeProstredky;
			}
			set
			{
				this._ZdravotnickeProstredky.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ZdravotnickeProstredky(ZdravotnickeProstredky entity)
		{
			this.SendPropertyChanging();
			entity.OdpovednaOsoba = this;
		}
		
		private void detach_ZdravotnickeProstredky(ZdravotnickeProstredky entity)
		{
			this.SendPropertyChanging();
			entity.OdpovednaOsoba = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZdravotnickeProstredky")]
	public partial class ZdravotnickeProstredky : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Uid;
		
		private string _Nazev;
		
		private System.Nullable<int> _TechnickaKontrola;
		
		private System.Nullable<int> _OdpovednaOsobaId;
		
		private EntityRef<OdpovednaOsoba> _OdpovednaOsoba;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUidChanging(string value);
    partial void OnUidChanged();
    partial void OnNazevChanging(string value);
    partial void OnNazevChanged();
    partial void OnTechnickaKontrolaChanging(System.Nullable<int> value);
    partial void OnTechnickaKontrolaChanged();
    partial void OnOdpovednaOsobaIdChanging(System.Nullable<int> value);
    partial void OnOdpovednaOsobaIdChanged();
    #endregion
		
		public ZdravotnickeProstredky()
		{
			this._OdpovednaOsoba = default(EntityRef<OdpovednaOsoba>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazev", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazev
		{
			get
			{
				return this._Nazev;
			}
			set
			{
				if ((this._Nazev != value))
				{
					this.OnNazevChanging(value);
					this.SendPropertyChanging();
					this._Nazev = value;
					this.SendPropertyChanged("Nazev");
					this.OnNazevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnickaKontrola", DbType="Int")]
		public System.Nullable<int> TechnickaKontrola
		{
			get
			{
				return this._TechnickaKontrola;
			}
			set
			{
				if ((this._TechnickaKontrola != value))
				{
					this.OnTechnickaKontrolaChanging(value);
					this.SendPropertyChanging();
					this._TechnickaKontrola = value;
					this.SendPropertyChanged("TechnickaKontrola");
					this.OnTechnickaKontrolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdpovednaOsobaId", DbType="Int")]
		public System.Nullable<int> OdpovednaOsobaId
		{
			get
			{
				return this._OdpovednaOsobaId;
			}
			set
			{
				if ((this._OdpovednaOsobaId != value))
				{
					if (this._OdpovednaOsoba.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOdpovednaOsobaIdChanging(value);
					this.SendPropertyChanging();
					this._OdpovednaOsobaId = value;
					this.SendPropertyChanged("OdpovednaOsobaId");
					this.OnOdpovednaOsobaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OdpovednaOsoba_ZdravotnickeProstredky", Storage="_OdpovednaOsoba", ThisKey="OdpovednaOsobaId", OtherKey="Id", IsForeignKey=true)]
		public OdpovednaOsoba OdpovednaOsoba
		{
			get
			{
				return this._OdpovednaOsoba.Entity;
			}
			set
			{
				OdpovednaOsoba previousValue = this._OdpovednaOsoba.Entity;
				if (((previousValue != value) 
							|| (this._OdpovednaOsoba.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OdpovednaOsoba.Entity = null;
						previousValue.ZdravotnickeProstredky.Remove(this);
					}
					this._OdpovednaOsoba.Entity = value;
					if ((value != null))
					{
						value.ZdravotnickeProstredky.Add(this);
						this._OdpovednaOsobaId = value.Id;
					}
					else
					{
						this._OdpovednaOsobaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OdpovednaOsoba");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
